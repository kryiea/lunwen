        -:    0:Source:C:/PROGRA~1/JETBRA~1/CLION2~1.1/bin/mingw/lib/gcc/x86_64-w64-mingw32/11.2.0/include/c++/ext/aligned_buffer.h
        -:    0:Graph:C:\Users\86195\Desktop\lunwen\cmake-build-debug-\CMakeFiles\lunwen.dir\main.cpp.gcno
        -:    0:Data:C:\Users\86195\Desktop\lunwen\cmake-build-debug-\CMakeFiles\lunwen.dir\main.cpp.gcda
        -:    0:Runs:1
        -:    1:// Aligned memory buffer -*- C++ -*-
        -:    2:
        -:    3:// Copyright (C) 2013-2021 Free Software Foundation, Inc.
        -:    4://
        -:    5:// This file is part of the GNU ISO C++ Library.  This library is free
        -:    6:// software; you can redistribute it and/or modify it under the
        -:    7:// terms of the GNU General Public License as published by the
        -:    8:// Free Software Foundation; either version 3, or (at your option)
        -:    9:// any later version.
        -:   10:
        -:   11:// This library is distributed in the hope that it will be useful,
        -:   12:// but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   13:// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   14:// GNU General Public License for more details.
        -:   15:
        -:   16:// Under Section 7 of GPL version 3, you are granted additional
        -:   17:// permissions described in the GCC Runtime Library Exception, version
        -:   18:// 3.1, as published by the Free Software Foundation.
        -:   19:
        -:   20:// You should have received a copy of the GNU General Public License and
        -:   21:// a copy of the GCC Runtime Library Exception along with this program;
        -:   22:// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
        -:   23:// <http://www.gnu.org/licenses/>.
        -:   24:
        -:   25:/** @file ext/aligned_buffer.h
        -:   26: *  This file is a GNU extension to the Standard C++ Library.
        -:   27: */
        -:   28:
        -:   29:#ifndef _ALIGNED_BUFFER_H
        -:   30:#define _ALIGNED_BUFFER_H 1
        -:   31:
        -:   32:#pragma GCC system_header
        -:   33:
        -:   34:#if __cplusplus >= 201103L
        -:   35:# include <type_traits>
        -:   36:#else
        -:   37:# include <bits/c++0x_warning.h>
        -:   38:#endif
        -:   39:
        -:   40:namespace __gnu_cxx
        -:   41:{
        -:   42:  // A utility type containing a POD object that can hold an object of type
        -:   43:  // _Tp initialized via placement new or allocator_traits::construct.
        -:   44:  // Intended for use as a data member subobject, use __aligned_buffer for
        -:   45:  // complete objects.
        -:   46:  template<typename _Tp>
        -:   47:    struct __aligned_membuf
        -:   48:    {
        -:   49:      // Target macro ADJUST_FIELD_ALIGN can produce different alignment for
        -:   50:      // types when used as class members. __aligned_membuf is intended
        -:   51:      // for use as a class member, so align the buffer as for a class member.
        -:   52:      // Since GCC 8 we could just use alignof(_Tp) instead, but older
        -:   53:      // versions of non-GNU compilers might still need this trick.
        -:   54:      struct _Tp2 { _Tp _M_t; };
        -:   55:
        -:   56:      alignas(__alignof__(_Tp2::_M_t)) unsigned char _M_storage[sizeof(_Tp)];
        -:   57:
        -:   58:      __aligned_membuf() = default;
        -:   59:
        -:   60:      // Can be used to avoid value-initialization zeroing _M_storage.
        -:   61:      __aligned_membuf(std::nullptr_t) { }
        -:   62:
        -:   63:      void*
function _ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN8cppjieba16KeywordExtractor4WordEEE7_M_addrEv called 422826 returned 100% blocks executed 100%
   422826:   64:      _M_addr() noexcept
   422826:   65:      { return static_cast<void*>(&_M_storage); }
   422826:   65-block  0
        -:   66:
        -:   67:      const void*
function _ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN8cppjieba16KeywordExtractor4WordEEE7_M_addrEv called 766446 returned 100% blocks executed 100%
   766446:   68:      _M_addr() const noexcept
   766446:   69:      { return static_cast<const void*>(&_M_storage); }
   766446:   69-block  0
        -:   70:
        -:   71:      _Tp*
function _ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN8cppjieba16KeywordExtractor4WordEEE6_M_ptrEv called 422826 returned 100% blocks executed 100%
   422826:   72:      _M_ptr() noexcept
   422826:   73:      { return static_cast<_Tp*>(_M_addr()); }
   422826:   73-block  0
call    0 returned 422826
        -:   74:
        -:   75:      const _Tp*
function _ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN8cppjieba16KeywordExtractor4WordEEE6_M_ptrEv called 766446 returned 100% blocks executed 100%
   766446:   76:      _M_ptr() const noexcept
   766446:   77:      { return static_cast<const _Tp*>(_M_addr()); }
   766446:   77-block  0
call    0 returned 766446
        -:   78:    };
        -:   79:
        -:   80:#if _GLIBCXX_INLINE_VERSION
        -:   81:  template<typename _Tp>
        -:   82:    using __aligned_buffer = __aligned_membuf<_Tp>;
        -:   83:#else
        -:   84:  // Similar to __aligned_membuf but aligned for complete objects, not members.
        -:   85:  // This type is used in <forward_list>, <future>, <bits/shared_ptr_base.h>
        -:   86:  // and <bits/hashtable_policy.h>, but ideally they would use __aligned_membuf
        -:   87:  // instead, as it has smaller size for some types on some targets.
        -:   88:  // This type is still used to avoid an ABI change.
        -:   89:  template<typename _Tp>
        -:   90:    struct __aligned_buffer
        -:   91:    : std::aligned_storage<sizeof(_Tp), __alignof__(_Tp)>
        -:   92:    {
        -:   93:      typename
        -:   94:	std::aligned_storage<sizeof(_Tp), __alignof__(_Tp)>::type _M_storage;
        -:   95:
        -:   96:      __aligned_buffer() = default;
        -:   97:
        -:   98:      // Can be used to avoid value-initialization
        -:   99:      __aligned_buffer(std::nullptr_t) { }
        -:  100:
        -:  101:      void*
  5422324:  102:      _M_addr() noexcept
        -:  103:      {
  5422324:  104:        return static_cast<void*>(&_M_storage);
        -:  105:      }
------------------
_ZN9__gnu_cxx16__aligned_bufferINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv:
function _ZN9__gnu_cxx16__aligned_bufferINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv called 2558 returned 100% blocks executed 100%
     2558:  102:      _M_addr() noexcept
        -:  103:      {
     2558:  104:        return static_cast<void*>(&_M_storage);
     2558:  104-block  0
        -:  105:      }
------------------
_ZN9__gnu_cxx16__aligned_bufferIjE7_M_addrEv:
function _ZN9__gnu_cxx16__aligned_bufferIjE7_M_addrEv called 30 returned 100% blocks executed 100%
       30:  102:      _M_addr() noexcept
        -:  103:      {
       30:  104:        return static_cast<void*>(&_M_storage);
       30:  104-block  0
        -:  105:      }
------------------
_ZN9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdEE7_M_addrEv:
function _ZN9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdEE7_M_addrEv called 781700 returned 100% blocks executed 100%
   781700:  102:      _M_addr() noexcept
        -:  103:      {
   781700:  104:        return static_cast<void*>(&_M_storage);
   781700:  104-block  0
        -:  105:      }
------------------
_ZN9__gnu_cxx16__aligned_bufferISt4pairIKjdEE7_M_addrEv:
function _ZN9__gnu_cxx16__aligned_bufferISt4pairIKjdEE7_M_addrEv called 1576068 returned 100% blocks executed 100%
  1576068:  102:      _M_addr() noexcept
        -:  103:      {
  1576068:  104:        return static_cast<void*>(&_M_storage);
  1576068:  104-block  0
        -:  105:      }
------------------
_ZN9__gnu_cxx16__aligned_bufferISt4pairIKjPN8cppjieba8TrieNodeEEE7_M_addrEv:
function _ZN9__gnu_cxx16__aligned_bufferISt4pairIKjPN8cppjieba8TrieNodeEEE7_M_addrEv called 3061968 returned 100% blocks executed 100%
  3061968:  102:      _M_addr() noexcept
        -:  103:      {
  3061968:  104:        return static_cast<void*>(&_M_storage);
  3061968:  104-block  0
        -:  105:      }
------------------
        -:  106:
        -:  107:      const void*
  5279214:  108:      _M_addr() const noexcept
        -:  109:      {
  5279214:  110:        return static_cast<const void*>(&_M_storage);
        -:  111:      }
------------------
_ZNK9__gnu_cxx16__aligned_bufferIjE7_M_addrEv:
function _ZNK9__gnu_cxx16__aligned_bufferIjE7_M_addrEv called 346100 returned 100% blocks executed 100%
   346100:  108:      _M_addr() const noexcept
        -:  109:      {
   346100:  110:        return static_cast<const void*>(&_M_storage);
   346100:  110-block  0
        -:  111:      }
------------------
_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdEE7_M_addrEv:
function _ZNK9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdEE7_M_addrEv called 5222 returned 100% blocks executed 100%
     5222:  108:      _M_addr() const noexcept
        -:  109:      {
     5222:  110:        return static_cast<const void*>(&_M_storage);
     5222:  110-block  0
        -:  111:      }
------------------
_ZNK9__gnu_cxx16__aligned_bufferINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv:
function _ZNK9__gnu_cxx16__aligned_bufferINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv called 7803 returned 100% blocks executed 100%
     7803:  108:      _M_addr() const noexcept
        -:  109:      {
     7803:  110:        return static_cast<const void*>(&_M_storage);
     7803:  110-block  0
        -:  111:      }
------------------
_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKjdEE7_M_addrEv:
function _ZNK9__gnu_cxx16__aligned_bufferISt4pairIKjdEE7_M_addrEv called 1685595 returned 100% blocks executed 100%
  1685595:  108:      _M_addr() const noexcept
        -:  109:      {
  1685595:  110:        return static_cast<const void*>(&_M_storage);
  1685595:  110-block  0
        -:  111:      }
------------------
_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKjPN8cppjieba8TrieNodeEEE7_M_addrEv:
function _ZNK9__gnu_cxx16__aligned_bufferISt4pairIKjPN8cppjieba8TrieNodeEEE7_M_addrEv called 3234494 returned 100% blocks executed 100%
  3234494:  108:      _M_addr() const noexcept
        -:  109:      {
  3234494:  110:        return static_cast<const void*>(&_M_storage);
  3234494:  110-block  0
        -:  111:      }
------------------
        -:  112:
        -:  113:      _Tp*
  5422324:  114:      _M_ptr() noexcept
  5422324:  115:      { return static_cast<_Tp*>(_M_addr()); }
------------------
_ZN9__gnu_cxx16__aligned_bufferINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv:
function _ZN9__gnu_cxx16__aligned_bufferINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv called 2558 returned 100% blocks executed 100%
     2558:  114:      _M_ptr() noexcept
     2558:  115:      { return static_cast<_Tp*>(_M_addr()); }
     2558:  115-block  0
call    0 returned 2558
------------------
_ZN9__gnu_cxx16__aligned_bufferIjE6_M_ptrEv:
function _ZN9__gnu_cxx16__aligned_bufferIjE6_M_ptrEv called 30 returned 100% blocks executed 100%
       30:  114:      _M_ptr() noexcept
       30:  115:      { return static_cast<_Tp*>(_M_addr()); }
       30:  115-block  0
call    0 returned 30
------------------
_ZN9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdEE6_M_ptrEv:
function _ZN9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdEE6_M_ptrEv called 781700 returned 100% blocks executed 100%
   781700:  114:      _M_ptr() noexcept
   781700:  115:      { return static_cast<_Tp*>(_M_addr()); }
   781700:  115-block  0
call    0 returned 781700
------------------
_ZN9__gnu_cxx16__aligned_bufferISt4pairIKjdEE6_M_ptrEv:
function _ZN9__gnu_cxx16__aligned_bufferISt4pairIKjdEE6_M_ptrEv called 1576068 returned 100% blocks executed 100%
  1576068:  114:      _M_ptr() noexcept
  1576068:  115:      { return static_cast<_Tp*>(_M_addr()); }
  1576068:  115-block  0
call    0 returned 1576068
------------------
_ZN9__gnu_cxx16__aligned_bufferISt4pairIKjPN8cppjieba8TrieNodeEEE6_M_ptrEv:
function _ZN9__gnu_cxx16__aligned_bufferISt4pairIKjPN8cppjieba8TrieNodeEEE6_M_ptrEv called 3061968 returned 100% blocks executed 100%
  3061968:  114:      _M_ptr() noexcept
  3061968:  115:      { return static_cast<_Tp*>(_M_addr()); }
  3061968:  115-block  0
call    0 returned 3061968
------------------
        -:  116:
        -:  117:      const _Tp*
  5279214:  118:      _M_ptr() const noexcept
  5279214:  119:      { return static_cast<const _Tp*>(_M_addr()); }
------------------
_ZNK9__gnu_cxx16__aligned_bufferIjE6_M_ptrEv:
function _ZNK9__gnu_cxx16__aligned_bufferIjE6_M_ptrEv called 346100 returned 100% blocks executed 100%
   346100:  118:      _M_ptr() const noexcept
   346100:  119:      { return static_cast<const _Tp*>(_M_addr()); }
   346100:  119-block  0
call    0 returned 346100
------------------
_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdEE6_M_ptrEv:
function _ZNK9__gnu_cxx16__aligned_bufferISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdEE6_M_ptrEv called 5222 returned 100% blocks executed 100%
     5222:  118:      _M_ptr() const noexcept
     5222:  119:      { return static_cast<const _Tp*>(_M_addr()); }
     5222:  119-block  0
call    0 returned 5222
------------------
_ZNK9__gnu_cxx16__aligned_bufferINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv:
function _ZNK9__gnu_cxx16__aligned_bufferINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv called 7803 returned 100% blocks executed 100%
     7803:  118:      _M_ptr() const noexcept
     7803:  119:      { return static_cast<const _Tp*>(_M_addr()); }
     7803:  119-block  0
call    0 returned 7803
------------------
_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKjdEE6_M_ptrEv:
function _ZNK9__gnu_cxx16__aligned_bufferISt4pairIKjdEE6_M_ptrEv called 1685595 returned 100% blocks executed 100%
  1685595:  118:      _M_ptr() const noexcept
  1685595:  119:      { return static_cast<const _Tp*>(_M_addr()); }
  1685595:  119-block  0
call    0 returned 1685595
------------------
_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKjPN8cppjieba8TrieNodeEEE6_M_ptrEv:
function _ZNK9__gnu_cxx16__aligned_bufferISt4pairIKjPN8cppjieba8TrieNodeEEE6_M_ptrEv called 3234494 returned 100% blocks executed 100%
  3234494:  118:      _M_ptr() const noexcept
  3234494:  119:      { return static_cast<const _Tp*>(_M_addr()); }
  3234494:  119-block  0
call    0 returned 3234494
------------------
        -:  120:    };
        -:  121:#endif
        -:  122:
        -:  123:} // namespace
        -:  124:
        -:  125:#endif /* _ALIGNED_BUFFER_H */
