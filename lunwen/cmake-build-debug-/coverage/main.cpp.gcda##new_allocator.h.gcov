        -:    0:Source:C:/PROGRA~1/JETBRA~1/CLION2~1.1/bin/mingw/lib/gcc/x86_64-w64-mingw32/11.2.0/include/c++/ext/new_allocator.h
        -:    0:Graph:C:\Users\86195\Desktop\lunwen\cmake-build-debug-\CMakeFiles\lunwen.dir\main.cpp.gcno
        -:    0:Data:C:\Users\86195\Desktop\lunwen\cmake-build-debug-\CMakeFiles\lunwen.dir\main.cpp.gcda
        -:    0:Runs:1
        -:    1:// Allocator that wraps operator new -*- C++ -*-
        -:    2:
        -:    3:// Copyright (C) 2001-2021 Free Software Foundation, Inc.
        -:    4://
        -:    5:// This file is part of the GNU ISO C++ Library.  This library is free
        -:    6:// software; you can redistribute it and/or modify it under the
        -:    7:// terms of the GNU General Public License as published by the
        -:    8:// Free Software Foundation; either version 3, or (at your option)
        -:    9:// any later version.
        -:   10:
        -:   11:// This library is distributed in the hope that it will be useful,
        -:   12:// but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   13:// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   14:// GNU General Public License for more details.
        -:   15:
        -:   16:// Under Section 7 of GPL version 3, you are granted additional
        -:   17:// permissions described in the GCC Runtime Library Exception, version
        -:   18:// 3.1, as published by the Free Software Foundation.
        -:   19:
        -:   20:// You should have received a copy of the GNU General Public License and
        -:   21:// a copy of the GCC Runtime Library Exception along with this program;
        -:   22:// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
        -:   23:// <http://www.gnu.org/licenses/>.
        -:   24:
        -:   25:/** @file ext/new_allocator.h
        -:   26: *  This file is a GNU extension to the Standard C++ Library.
        -:   27: */
        -:   28:
        -:   29:#ifndef _NEW_ALLOCATOR_H
        -:   30:#define _NEW_ALLOCATOR_H 1
        -:   31:
        -:   32:#include <bits/c++config.h>
        -:   33:#include <new>
        -:   34:#include <bits/functexcept.h>
        -:   35:#include <bits/move.h>
        -:   36:#if __cplusplus >= 201103L
        -:   37:#include <type_traits>
        -:   38:#endif
        -:   39:
        -:   40:namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
        -:   41:{
        -:   42:_GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:   43:
        -:   44:  /**
        -:   45:   *  @brief  An allocator that uses global new, as per C++03 [20.4.1].
        -:   46:   *  @ingroup allocators
        -:   47:   *
        -:   48:   *  This is precisely the allocator defined in the C++ Standard.
        -:   49:   *    - all allocation calls operator new
        -:   50:   *    - all deallocation calls operator delete
        -:   51:   *
        -:   52:   *  @tparam  _Tp  Type of allocated object.
        -:   53:   */
        -:   54:  template<typename _Tp>
        -:   55:    class new_allocator
        -:   56:    {
        -:   57:    public:
        -:   58:      typedef _Tp        value_type;
        -:   59:      typedef std::size_t     size_type;
        -:   60:      typedef std::ptrdiff_t  difference_type;
        -:   61:#if __cplusplus <= 201703L
        -:   62:      typedef _Tp*       pointer;
        -:   63:      typedef const _Tp* const_pointer;
        -:   64:      typedef _Tp&       reference;
        -:   65:      typedef const _Tp& const_reference;
        -:   66:
        -:   67:      template<typename _Tp1>
        -:   68:	struct rebind
        -:   69:	{ typedef new_allocator<_Tp1> other; };
        -:   70:#endif
        -:   71:
        -:   72:#if __cplusplus >= 201103L
        -:   73:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:   74:      // 2103. propagate_on_container_move_assignment
        -:   75:      typedef std::true_type propagate_on_container_move_assignment;
        -:   76:#endif
        -:   77:
        -:   78:      _GLIBCXX20_CONSTEXPR
  744854*:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6limonp11LocalVectorIjEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIN6limonp11LocalVectorIjEEEC2Ev called 1 returned 100% blocks executed 100%
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIcEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIcEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKjPN8cppjieba8TrieNodeEELb0EEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKjPN8cppjieba8TrieNodeEELb0EEEEC2Ev called 201008 returned 100% blocks executed 100%
   201008:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIjLb0EEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIjLb0EEEEC2Ev called 4 returned 100% blocks executed 100%
        4:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba8DictUnitEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba8DictUnitEEC2Ev called 3 returned 100% blocks executed 100%
        3:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKjdELb0EEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKjdELb0EEEEC2Ev called 4 returned 100% blocks executed 100%
        4:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIiEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIiEC2Ev called 25912 returned 100% blocks executed 100%
    25912:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIdEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIdEC2Ev called 25914 returned 100% blocks executed 100%
    25914:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdELb1EEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdELb1EEEEC2Ev called 1 returned 100% blocks executed 100%
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb1EEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb1EEEEC2Ev called 1 returned 100% blocks executed 100%
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev called 16 returned 100% blocks executed 100%
       16:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba4WordEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba4WordEEC2Ev called 4 returned 100% blocks executed 100%
        4:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev called 415506 returned 100% blocks executed 100%
   415506:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPKN8cppjieba8DictUnitEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIPKN8cppjieba8DictUnitEEC2Ev called 1 returned 100% blocks executed 100%
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba9WordRangeEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba9WordRangeEEC2Ev called 29876 returned 100% blocks executed 100%
    29876:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba3DagEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba3DagEEC2Ev called 14936 returned 100% blocks executed 100%
    14936:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPSt13unordered_mapIjdSt4hashIjESt8equal_toIjESaISt4pairIKjdEEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIPSt13unordered_mapIjdSt4hashIjESt8equal_toIjESaISt4pairIKjdEEEEC2Ev called 1 returned 100% blocks executed 100%
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIyEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIyEC2Ev called 31650 returned 100% blocks executed 100%
    31650:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba16KeywordExtractor4WordEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba16KeywordExtractor4WordEEC2Ev called 4 returned 100% blocks executed 100%
        4:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN8cppjieba16KeywordExtractor4WordEEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN8cppjieba16KeywordExtractor4WordEEEEC2Ev called 4 returned 100% blocks executed 100%
        4:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdEEC2Ev called 4 returned 100% blocks executed 100%
        4:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIydEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt4pairIydEEC2Ev called 2 returned 100% blocks executed 100%
        2:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPN8cppjieba8DictUnitEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIPN8cppjieba8DictUnitEEC2Ev called 2 returned 100% blocks executed 100%
        2:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
        -:   80:
        -:   81:      _GLIBCXX20_CONSTEXPR
  225642*:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIyEC2ERKS1_:
function _ZN9__gnu_cxx13new_allocatorIyEC2ERKS1_ called 121986 returned 100% blocks executed 100%
   121986:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba8DictUnitEEC2ERKS3_:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba8DictUnitEEC2ERKS3_ called 4 returned 100% blocks executed 100%
        4:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_:
function _ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_ called 51828 returned 100% blocks executed 100%
    51828:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_:
function _ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_ called 51824 returned 100% blocks executed 100%
    51824:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_:
function _ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_ called 0 returned 0% blocks executed 0%
    #####:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
        -:   83:
        -:   84:      template<typename _Tp1>
        -:   85:	_GLIBCXX20_CONSTEXPR
        -:   86:	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
        -:   87:
        -:   88:#if __cplusplus <= 201703L
  970494*:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPSt13unordered_mapIjdSt4hashIjESt8equal_toIjESaISt4pairIKjdEEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIPSt13unordered_mapIjdSt4hashIjESt8equal_toIjESaISt4pairIKjdEEEED2Ev called 1 returned 100% blocks executed 100%
        1:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIcED2Ev:
function _ZN9__gnu_cxx13new_allocatorIcED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev called 16 returned 100% blocks executed 100%
       16:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba4WordEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba4WordEED2Ev called 4 returned 100% blocks executed 100%
        4:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKjPN8cppjieba8TrieNodeEELb0EEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKjPN8cppjieba8TrieNodeEELb0EEEED2Ev called 201008 returned 100% blocks executed 100%
   201008:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba8DictUnitEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba8DictUnitEED2Ev called 7 returned 100% blocks executed 100%
        7:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIjLb0EEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIjLb0EEEED2Ev called 4 returned 100% blocks executed 100%
        4:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6limonp11LocalVectorIjEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIN6limonp11LocalVectorIjEEED2Ev called 1 returned 100% blocks executed 100%
        1:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPKN8cppjieba8DictUnitEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIPKN8cppjieba8DictUnitEED2Ev called 1 returned 100% blocks executed 100%
        1:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba9WordRangeEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba9WordRangeEED2Ev called 29876 returned 100% blocks executed 100%
    29876:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba3DagEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba3DagEED2Ev called 14936 returned 100% blocks executed 100%
    14936:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKjdELb0EEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKjdELb0EEEED2Ev called 4 returned 100% blocks executed 100%
        4:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev called 415506 returned 100% blocks executed 100%
   415506:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIyED2Ev:
function _ZN9__gnu_cxx13new_allocatorIyED2Ev called 153636 returned 100% blocks executed 100%
   153636:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIiED2Ev:
function _ZN9__gnu_cxx13new_allocatorIiED2Ev called 77736 returned 100% blocks executed 100%
    77736:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIdED2Ev:
function _ZN9__gnu_cxx13new_allocatorIdED2Ev called 77742 returned 100% blocks executed 100%
    77742:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdELb1EEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdELb1EEEED2Ev called 1 returned 100% blocks executed 100%
        1:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb1EEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb1EEEED2Ev called 1 returned 100% blocks executed 100%
        1:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba16KeywordExtractor4WordEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba16KeywordExtractor4WordEED2Ev called 4 returned 100% blocks executed 100%
        4:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN8cppjieba16KeywordExtractor4WordEEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN8cppjieba16KeywordExtractor4WordEEEED2Ev called 4 returned 100% blocks executed 100%
        4:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdEED2Ev called 2 returned 100% blocks executed 100%
        2:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIydEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt4pairIydEED2Ev called 2 returned 100% blocks executed 100%
        2:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPN8cppjieba8DictUnitEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIPN8cppjieba8DictUnitEED2Ev called 2 returned 100% blocks executed 100%
        2:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
        -:   90:
        -:   91:      pointer
        -:   92:      address(reference __x) const _GLIBCXX_NOEXCEPT
        -:   93:      { return std::__addressof(__x); }
        -:   94:
        -:   95:      const_pointer
        -:   96:      address(const_reference __x) const _GLIBCXX_NOEXCEPT
        -:   97:      { return std::__addressof(__x); }
        -:   98:#endif
        -:   99:
        -:  100:      // NB: __n is permitted to be 0.  The C++ standard says nothing
        -:  101:      // about what the return value is when __n == 0.
        -:  102:      _GLIBCXX_NODISCARD _Tp*
 1147694*:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
 1147694*:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    #####:  116:	      std::__throw_bad_array_new_length();
    #####:  117:	    std::__throw_bad_alloc();
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
 1147694*:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EE8allocateEyPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba9WordRangeEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba9WordRangeEE8allocateEyPKv called 29876 returned 100% blocks executed 62%
    29876:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    29876:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    29876:  111-block  0
call    0 returned 29876
branch  1 taken 0 (fallthrough)
branch  2 taken 29876
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    29876:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    29876:  127-block  0
call    0 returned 29876
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba4WordEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba4WordEE8allocateEyPKv called 4 returned 100% blocks executed 62%
        4:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
        4:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
        4:  111-block  0
call    0 returned 4
branch  1 taken 0 (fallthrough)
branch  2 taken 4
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
        4:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        4:  127-block  0
call    0 returned 4
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba16KeywordExtractor4WordEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba16KeywordExtractor4WordEE8allocateEyPKv called 4 returned 100% blocks executed 62%
        4:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
        4:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
        4:  111-block  0
call    0 returned 4
branch  1 taken 0 (fallthrough)
branch  2 taken 4
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
        4:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        4:  127-block  0
call    0 returned 4
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEyPKv called 77 returned 100% blocks executed 62%
       77:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
       77:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
       77:  111-block  0
call    0 returned 77
branch  1 taken 0 (fallthrough)
branch  2 taken 77
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
       77:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       77:  127-block  0
call    0 returned 77
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba3DagEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba3DagEE8allocateEyPKv called 14936 returned 100% blocks executed 62%
    14936:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    14936:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    14936:  111-block  0
call    0 returned 14936
branch  1 taken 0 (fallthrough)
branch  2 taken 14936
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    14936:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    14936:  127-block  0
call    0 returned 14936
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPN8cppjieba8DictUnitEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorIPN8cppjieba8DictUnitEE8allocateEyPKv called 1 returned 100% blocks executed 62%
        1:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
        1:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
        1:  111-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
        1:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        1:  127-block  0
call    0 returned 1
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba8DictUnitEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba8DictUnitEE8allocateEyPKv called 23 returned 100% blocks executed 62%
       23:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
       23:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
       23:  111-block  0
call    0 returned 23
branch  1 taken 0 (fallthrough)
branch  2 taken 23
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
       23:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       23:  127-block  0
call    0 returned 23
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN6limonp11LocalVectorIjEEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorIN6limonp11LocalVectorIjEEE8allocateEyPKv called 20 returned 100% blocks executed 62%
       20:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
       20:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
       20:  111-block  0
call    0 returned 20
branch  1 taken 0 (fallthrough)
branch  2 taken 20
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
       20:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       20:  127-block  0
call    0 returned 20
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIyE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorIyE8allocateEyPKv called 44054 returned 100% blocks executed 62%
    44054:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    44054:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    44054:  111-block  0
call    0 returned 44054
branch  1 taken 0 (fallthrough)
branch  2 taken 44054
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    44054:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    44054:  127-block  0
call    0 returned 44054
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIydEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorISt4pairIydEE8allocateEyPKv called 2 returned 100% blocks executed 62%
        2:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
        2:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
        2:  111-block  0
call    0 returned 2
branch  1 taken 0 (fallthrough)
branch  2 taken 2
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
        2:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        2:  127-block  0
call    0 returned 2
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPKN8cppjieba8DictUnitEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorIPKN8cppjieba8DictUnitEE8allocateEyPKv called 20 returned 100% blocks executed 62%
       20:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
       20:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
       20:  111-block  0
call    0 returned 20
branch  1 taken 0 (fallthrough)
branch  2 taken 20
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
       20:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       20:  127-block  0
call    0 returned 20
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEyPKv called 207753 returned 100% blocks executed 62%
   207753:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
   207753:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
   207753:  111-block  0
call    0 returned 207753
branch  1 taken 0 (fallthrough)
branch  2 taken 207753
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
   207753:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
   207753:  127-block  0
call    0 returned 207753
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPSt13unordered_mapIjdSt4hashIjESt8equal_toIjESaISt4pairIKjdEEEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorIPSt13unordered_mapIjdSt4hashIjESt8equal_toIjESaISt4pairIKjdEEEE8allocateEyPKv called 3 returned 100% blocks executed 62%
        3:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
        3:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
        3:  111-block  0
call    0 returned 3
branch  1 taken 0 (fallthrough)
branch  2 taken 3
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
        3:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        3:  127-block  0
call    0 returned 3
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKjdELb0EEEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKjdELb0EEEE8allocateEyPKv called 35224 returned 100% blocks executed 62%
    35224:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    35224:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    35224:  111-block  0
call    0 returned 35224
branch  1 taken 0 (fallthrough)
branch  2 taken 35224
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    35224:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    35224:  127-block  0
call    0 returned 35224
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIiE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorIiE8allocateEyPKv called 25912 returned 100% blocks executed 62%
    25912:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    25912:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    25912:  111-block  0
call    0 returned 25912
branch  1 taken 0 (fallthrough)
branch  2 taken 25912
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    25912:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    25912:  127-block  0
call    0 returned 25912
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIdE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorIdE8allocateEyPKv called 25914 returned 100% blocks executed 62%
    25914:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    25914:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    25914:  111-block  0
call    0 returned 25914
branch  1 taken 0 (fallthrough)
branch  2 taken 25914
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    25914:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    25914:  127-block  0
call    0 returned 25914
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdEE8allocateEyPKv called 24 returned 100% blocks executed 62%
       24:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
       24:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
       24:  111-block  0
call    0 returned 24
branch  1 taken 0 (fallthrough)
branch  2 taken 24
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
       24:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       24:  127-block  0
call    0 returned 24
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN8cppjieba16KeywordExtractor4WordEEEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN8cppjieba16KeywordExtractor4WordEEEE8allocateEyPKv called 5738 returned 100% blocks executed 62%
     5738:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
     5738:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
     5738:  111-block  0
call    0 returned 5738
branch  1 taken 0 (fallthrough)
branch  2 taken 5738
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
     5738:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
     5738:  127-block  0
call    0 returned 5738
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdELb1EEEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdELb1EEEE8allocateEyPKv called 258826 returned 100% blocks executed 62%
   258826:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
   258826:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
   258826:  111-block  0
call    0 returned 258826
branch  1 taken 0 (fallthrough)
branch  2 taken 258826
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
   258826:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
   258826:  127-block  0
call    0 returned 258826
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKjPN8cppjieba8TrieNodeEELb0EEEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKjPN8cppjieba8TrieNodeEELb0EEEE8allocateEyPKv called 497989 returned 100% blocks executed 62%
   497989:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
   497989:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
   497989:  111-block  0
call    0 returned 497989
branch  1 taken 0 (fallthrough)
branch  2 taken 497989
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
   497989:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
   497989:  127-block  0
call    0 returned 497989
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIjLb0EEEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIjLb0EEEE8allocateEyPKv called 15 returned 100% blocks executed 62%
       15:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
       15:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
       15:  111-block  0
call    0 returned 15
branch  1 taken 0 (fallthrough)
branch  2 taken 15
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
       15:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       15:  127-block  0
call    0 returned 15
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb1EEEE8allocateEyPKv:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb1EEEE8allocateEyPKv called 1279 returned 100% blocks executed 62%
     1279:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
     1279:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
     1279:  111-block  0
call    0 returned 1279
branch  1 taken 0 (fallthrough)
branch  2 taken 1279
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
     1279:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
     1279:  127-block  0
call    0 returned 1279
        -:  128:      }
------------------
        -:  129:
        -:  130:      // __p is not permitted to be a null pointer.
        -:  131:      void
 1147692*:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
 1147692*:  145:	::operator delete(__p
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdEE10deallocateEPS8_y:
function _ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdEE10deallocateEPS8_y called 22 returned 100% blocks executed 100%
       22:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
       22:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
       22:  145:	::operator delete(__p
       22:  145-block  0
call    0 returned 22
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_y:
function _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_y called 77 returned 100% blocks executed 100%
       77:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
       77:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
       77:  145:	::operator delete(__p
       77:  145-block  0
call    0 returned 77
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba4WordEE10deallocateEPS2_y:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba4WordEE10deallocateEPS2_y called 4 returned 100% blocks executed 100%
        4:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        4:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
        4:  145:	::operator delete(__p
        4:  145-block  0
call    0 returned 4
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba8DictUnitEE10deallocateEPS2_y:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba8DictUnitEE10deallocateEPS2_y called 23 returned 100% blocks executed 100%
       23:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
       23:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
       23:  145:	::operator delete(__p
       23:  145-block  0
call    0 returned 23
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPN8cppjieba8DictUnitEE10deallocateEPS3_y:
function _ZN9__gnu_cxx13new_allocatorIPN8cppjieba8DictUnitEE10deallocateEPS3_y called 1 returned 100% blocks executed 100%
        1:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        1:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
        1:  145:	::operator delete(__p
        1:  145-block  0
call    0 returned 1
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN6limonp11LocalVectorIjEEE10deallocateEPS3_y:
function _ZN9__gnu_cxx13new_allocatorIN6limonp11LocalVectorIjEEE10deallocateEPS3_y called 20 returned 100% blocks executed 100%
       20:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
       20:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
       20:  145:	::operator delete(__p
       20:  145-block  0
call    0 returned 20
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPKN8cppjieba8DictUnitEE10deallocateEPS4_y:
function _ZN9__gnu_cxx13new_allocatorIPKN8cppjieba8DictUnitEE10deallocateEPS4_y called 20 returned 100% blocks executed 100%
       20:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
       20:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
       20:  145:	::operator delete(__p
       20:  145-block  0
call    0 returned 20
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba9WordRangeEE10deallocateEPS2_y:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba9WordRangeEE10deallocateEPS2_y called 29876 returned 100% blocks executed 100%
    29876:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    29876:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    29876:  145:	::operator delete(__p
    29876:  145-block  0
call    0 returned 29876
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba3DagEE10deallocateEPS2_y:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba3DagEE10deallocateEPS2_y called 14936 returned 100% blocks executed 100%
    14936:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    14936:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    14936:  145:	::operator delete(__p
    14936:  145-block  0
call    0 returned 14936
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPSt13unordered_mapIjdSt4hashIjESt8equal_toIjESaISt4pairIKjdEEEE10deallocateEPSB_y:
function _ZN9__gnu_cxx13new_allocatorIPSt13unordered_mapIjdSt4hashIjESt8equal_toIjESaISt4pairIKjdEEEE10deallocateEPSB_y called 3 returned 100% blocks executed 100%
        3:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        3:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
        3:  145:	::operator delete(__p
        3:  145-block  0
call    0 returned 3
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIyE10deallocateEPyy:
function _ZN9__gnu_cxx13new_allocatorIyE10deallocateEPyy called 44054 returned 100% blocks executed 100%
    44054:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    44054:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    44054:  145:	::operator delete(__p
    44054:  145-block  0
call    0 returned 44054
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba16KeywordExtractor4WordEE10deallocateEPS3_y:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba16KeywordExtractor4WordEE10deallocateEPS3_y called 4 returned 100% blocks executed 100%
        4:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        4:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
        4:  145:	::operator delete(__p
        4:  145-block  0
call    0 returned 4
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb1EEEE10deallocateEPS9_y:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb1EEEE10deallocateEPS9_y called 1279 returned 100% blocks executed 100%
     1279:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
     1279:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
     1279:  145:	::operator delete(__p
     1279:  145-block  0
call    0 returned 1279
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIydEE10deallocateEPS2_y:
function _ZN9__gnu_cxx13new_allocatorISt4pairIydEE10deallocateEPS2_y called 2 returned 100% blocks executed 100%
        2:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        2:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
        2:  145:	::operator delete(__p
        2:  145-block  0
call    0 returned 2
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPiy:
function _ZN9__gnu_cxx13new_allocatorIiE10deallocateEPiy called 25912 returned 100% blocks executed 100%
    25912:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    25912:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    25912:  145:	::operator delete(__p
    25912:  145-block  0
call    0 returned 25912
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdy:
function _ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdy called 25914 returned 100% blocks executed 100%
    25914:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    25914:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    25914:  145:	::operator delete(__p
    25914:  145-block  0
call    0 returned 25914
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_y:
function _ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_y called 207753 returned 100% blocks executed 100%
   207753:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
   207753:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
   207753:  145:	::operator delete(__p
   207753:  145-block  0
call    0 returned 207753
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EE10deallocateEPS8_y:
function _ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EE10deallocateEPS8_y called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    %%%%%:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKjdELb0EEEE10deallocateEPS6_y:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKjdELb0EEEE10deallocateEPS6_y called 35224 returned 100% blocks executed 100%
    35224:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    35224:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    35224:  145:	::operator delete(__p
    35224:  145-block  0
call    0 returned 35224
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN8cppjieba16KeywordExtractor4WordEEEE10deallocateEPSE_y:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN8cppjieba16KeywordExtractor4WordEEEE10deallocateEPSE_y called 5738 returned 100% blocks executed 100%
     5738:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
     5738:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
     5738:  145:	::operator delete(__p
     5738:  145-block  0
call    0 returned 5738
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdELb1EEEE10deallocateEPSC_y:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdELb1EEEE10deallocateEPSC_y called 258826 returned 100% blocks executed 100%
   258826:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
   258826:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
   258826:  145:	::operator delete(__p
   258826:  145-block  0
call    0 returned 258826
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKjPN8cppjieba8TrieNodeEELb0EEEE10deallocateEPS9_y:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKjPN8cppjieba8TrieNodeEELb0EEEE10deallocateEPS9_y called 497989 returned 100% blocks executed 100%
   497989:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
   497989:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
   497989:  145:	::operator delete(__p
   497989:  145-block  0
call    0 returned 497989
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIjLb0EEEE10deallocateEPS3_y:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIjLb0EEEE10deallocateEPS3_y called 15 returned 100% blocks executed 100%
       15:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
       15:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
       15:  145:	::operator delete(__p
       15:  145-block  0
call    0 returned 15
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
        -:  151:
        -:  152:#if __cplusplus <= 201703L
        -:  153:      size_type
  270255*:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
  270255*:  155:      { return _M_max_size(); }
------------------
_ZNK9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdEE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdEE8max_sizeEv called 48 returned 100% blocks executed 100%
       48:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
       48:  155:      { return _M_max_size(); }
       48:  155-block  0
call    0 returned 48
------------------
_ZNK9__gnu_cxx13new_allocatorIPSt13unordered_mapIjdSt4hashIjESt8equal_toIjESaISt4pairIKjdEEEE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorIPSt13unordered_mapIjdSt4hashIjESt8equal_toIjESaISt4pairIKjdEEEE8max_sizeEv called 6 returned 100% blocks executed 100%
        6:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
        6:  155:      { return _M_max_size(); }
        6:  155-block  0
call    0 returned 6
------------------
_ZNK9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EE8max_sizeEv called 0 returned 0% blocks executed 0%
    #####:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  155:      { return _M_max_size(); }
    %%%%%:  155-block  0
call    0 never executed
------------------
_ZNK9__gnu_cxx13new_allocatorIPKN8cppjieba8DictUnitEE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorIPKN8cppjieba8DictUnitEE8max_sizeEv called 40 returned 100% blocks executed 100%
       40:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
       40:  155:      { return _M_max_size(); }
       40:  155-block  0
call    0 returned 40
------------------
_ZNK9__gnu_cxx13new_allocatorIN6limonp11LocalVectorIjEEE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorIN6limonp11LocalVectorIjEEE8max_sizeEv called 40 returned 100% blocks executed 100%
       40:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
       40:  155:      { return _M_max_size(); }
       40:  155-block  0
call    0 returned 40
------------------
_ZNK9__gnu_cxx13new_allocatorISt4pairIydEE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorISt4pairIydEE8max_sizeEv called 8 returned 100% blocks executed 100%
        8:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
        8:  155:      { return _M_max_size(); }
        8:  155-block  0
call    0 returned 8
------------------
_ZNK9__gnu_cxx13new_allocatorIyE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorIyE8max_sizeEv called 128456 returned 100% blocks executed 100%
   128456:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
   128456:  155:      { return _M_max_size(); }
   128456:  155-block  0
call    0 returned 128456
------------------
_ZNK9__gnu_cxx13new_allocatorIN8cppjieba8DictUnitEE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorIN8cppjieba8DictUnitEE8max_sizeEv called 41 returned 100% blocks executed 100%
       41:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
       41:  155:      { return _M_max_size(); }
       41:  155-block  0
call    0 returned 41
------------------
_ZNK9__gnu_cxx13new_allocatorIN8cppjieba3DagEE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorIN8cppjieba3DagEE8max_sizeEv called 59744 returned 100% blocks executed 100%
    59744:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
    59744:  155:      { return _M_max_size(); }
    59744:  155-block  0
call    0 returned 59744
------------------
_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv called 162 returned 100% blocks executed 100%
      162:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
      162:  155:      { return _M_max_size(); }
      162:  155-block  0
call    0 returned 162
------------------
_ZNK9__gnu_cxx13new_allocatorIN8cppjieba16KeywordExtractor4WordEE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorIN8cppjieba16KeywordExtractor4WordEE8max_sizeEv called 4 returned 100% blocks executed 100%
        4:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
        4:  155:      { return _M_max_size(); }
        4:  155-block  0
call    0 returned 4
------------------
_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv called 25914 returned 100% blocks executed 100%
    25914:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
    25914:  155:      { return _M_max_size(); }
    25914:  155-block  0
call    0 returned 25914
------------------
_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv called 25912 returned 100% blocks executed 100%
    25912:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
    25912:  155:      { return _M_max_size(); }
    25912:  155-block  0
call    0 returned 25912
------------------
_ZNK9__gnu_cxx13new_allocatorIN8cppjieba4WordEE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorIN8cppjieba4WordEE8max_sizeEv called 4 returned 100% blocks executed 100%
        4:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
        4:  155:      { return _M_max_size(); }
        4:  155-block  0
call    0 returned 4
------------------
_ZNK9__gnu_cxx13new_allocatorIN8cppjieba9WordRangeEE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorIN8cppjieba9WordRangeEE8max_sizeEv called 29876 returned 100% blocks executed 100%
    29876:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
    29876:  155:      { return _M_max_size(); }
    29876:  155-block  0
call    0 returned 29876
------------------
        -:  156:
        -:  157:#if __cplusplus >= 201103L
        -:  158:      template<typename _Up, typename... _Args>
        -:  159:	void
 5080058*:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 5080058*:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdEE9constructIS8_JS8_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdEE9constructIS8_JS8_EEEvPT_DpOT0_ called 4048 returned 100% blocks executed 100%
     4048:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
     4048:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
     4048:  162-block  0
call    0 returned 4048
call    1 returned 4048
call    2 returned 4048
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JRKS6_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JRKS6_EEEvPT_DpOT0_ called 1670290 returned 100% blocks executed 83%
  1670290:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
  1670290:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  1670290:  162-block  0
call    0 returned 1670290
call    1 returned 1670290
call    2 returned 1670290
branch  3 taken 1670290 (fallthrough)
branch  4 taken 0 (throw)
  1670290:  162-block  1
    $$$$$:  162-block  2
call    5 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba8DictUnitEE9constructIS2_JRKS2_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba8DictUnitEE9constructIS2_JRKS2_EEEvPT_DpOT0_ called 348982 returned 100% blocks executed 83%
   348982:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
   348982:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   348982:  162-block  0
call    0 returned 348982
call    1 returned 348982
call    2 returned 348982
branch  3 taken 348982 (fallthrough)
branch  4 taken 0 (throw)
   348982:  162-block  1
    $$$$$:  162-block  2
call    5 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN6limonp11LocalVectorIjEEE9constructIS3_JRKS3_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIN6limonp11LocalVectorIjEEE9constructIS3_JRKS3_EEEvPT_DpOT0_ called 348982 returned 100% blocks executed 83%
   348982:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
   348982:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   348982:  162-block  0
call    0 returned 348982
call    1 returned 348982
call    2 returned 348982
branch  3 taken 348982 (fallthrough)
branch  4 taken 0 (throw)
   348982:  162-block  1
    $$$$$:  162-block  2
call    5 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba9WordRangeEE9constructIS2_JRKS2_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba9WordRangeEE9constructIS2_JRKS2_EEEvPT_DpOT0_ called 1072714 returned 100% blocks executed 100%
  1072714:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
  1072714:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  1072714:  162-block  0
call    0 returned 1072714
call    1 returned 1072714
------------------
_ZN9__gnu_cxx13new_allocatorIyE9constructIyJRKyEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIyE9constructIyJRKyEEEvPT_DpOT0_ called 95670 returned 100% blocks executed 100%
    95670:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    95670:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    95670:  162-block  0
call    0 returned 95670
call    1 returned 95670
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba16KeywordExtractor4WordEE9constructIS3_JRKS3_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba16KeywordExtractor4WordEE9constructIS3_JRKS3_EEEvPT_DpOT0_ called 5738 returned 100% blocks executed 83%
     5738:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
     5738:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
     5738:  162-block  0
call    0 returned 5738
call    1 returned 5738
call    2 returned 5738
branch  3 taken 5738 (fallthrough)
branch  4 taken 0 (throw)
     5738:  162-block  1
    $$$$$:  162-block  2
call    5 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba4WordEE9constructIS2_JS2_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba4WordEE9constructIS2_JS2_EEEvPT_DpOT0_ called 344610 returned 100% blocks executed 100%
   344610:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
   344610:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   344610:  162-block  0
call    0 returned 344610
call    1 returned 344610
call    2 returned 344610
------------------
_ZN9__gnu_cxx13new_allocatorIPKN8cppjieba8DictUnitEE9constructIS4_JS4_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIPKN8cppjieba8DictUnitEE9constructIS4_JS4_EEEvPT_DpOT0_ called 348982 returned 100% blocks executed 100%
   348982:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
   348982:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   348982:  162-block  0
call    0 returned 348982
call    1 returned 348982
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EE9constructIS8_JS8_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EE9constructIS8_JS8_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
call    2 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIPSt13unordered_mapIjdSt4hashIjESt8equal_toIjESaISt4pairIKjdEEEE9constructISB_JSB_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIPSt13unordered_mapIjdSt4hashIjESt8equal_toIjESaISt4pairIKjdEEEE9constructISB_JSB_EEEvPT_DpOT0_ called 4 returned 100% blocks executed 100%
        4:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
        4:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        4:  162-block  0
call    0 returned 4
call    1 returned 4
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIydEE9constructIS2_JS2_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt4pairIydEE9constructIS2_JS2_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKjdELb0EEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJRS4_EESC_IJEEEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKjdELb0EEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJRS4_EESC_IJEEEEEvPT_DpOT0_ called 35224 returned 100% blocks executed 67%
    35224:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    35224:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    35224:  162-block  0
call    0 returned 35224
call    1 returned 35224
call    2 returned 35224
call    3 returned 35224
call    4 returned 35224
call    5 returned 35224
branch  6 taken 35224 (fallthrough)
branch  7 taken 0 (throw)
    35224:  162-block  1
    $$$$$:  162-block  2
call    8 never executed
    $$$$$:  162-block  3
    $$$$$:  162-block  4
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN8cppjieba16KeywordExtractor4WordEEEE9constructISD_JRKSt21piecewise_construct_tSt5tupleIJRS9_EESK_IJEEEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN8cppjieba16KeywordExtractor4WordEEEE9constructISD_JRKSt21piecewise_construct_tSt5tupleIJRS9_EESK_IJEEEEEvPT_DpOT0_ called 5738 returned 100% blocks executed 67%
     5738:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
     5738:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
     5738:  162-block  0
call    0 returned 5738
call    1 returned 5738
call    2 returned 5738
call    3 returned 5738
call    4 returned 5738
call    5 returned 5738
branch  6 taken 5738 (fallthrough)
branch  7 taken 0 (throw)
     5738:  162-block  1
    $$$$$:  162-block  2
call    8 never executed
    $$$$$:  162-block  3
    $$$$$:  162-block  4
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdELb1EEEE9constructISB_JRKSt21piecewise_construct_tSt5tupleIJRSA_EESI_IJEEEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdELb1EEEE9constructISB_JRKSt21piecewise_construct_tSt5tupleIJRSA_EESI_IJEEEEEvPT_DpOT0_ called 258826 returned 100% blocks executed 67%
   258826:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
   258826:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   258826:  162-block  0
call    0 returned 258826
call    1 returned 258826
call    2 returned 258826
call    3 returned 258826
call    4 returned 258826
call    5 returned 258826
branch  6 taken 258826 (fallthrough)
branch  7 taken 0 (throw)
   258826:  162-block  1
    $$$$$:  162-block  2
call    8 never executed
    $$$$$:  162-block  3
    $$$$$:  162-block  4
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKjPN8cppjieba8TrieNodeEELb0EEEE9constructIS8_JS3_IjS7_EEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKjPN8cppjieba8TrieNodeEELb0EEEE9constructIS8_JS3_IjS7_EEEEvPT_DpOT0_ called 497989 returned 100% blocks executed 100%
   497989:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
   497989:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   497989:  162-block  0
call    0 returned 497989
call    1 returned 497989
call    2 returned 497989
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIjLb0EEEE9constructIjJRKjEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIjLb0EEEE9constructIjJRKjEEEvPT_DpOT0_ called 15 returned 100% blocks executed 100%
       15:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
       15:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       15:  162-block  0
call    0 returned 15
call    1 returned 15
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb1EEEE9constructIS8_JRKS8_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb1EEEE9constructIS8_JRKS8_EEEvPT_DpOT0_ called 1279 returned 100% blocks executed 83%
     1279:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
     1279:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
     1279:  162-block  0
call    0 returned 1279
call    1 returned 1279
call    2 returned 1279
branch  3 taken 1279 (fallthrough)
branch  4 taken 0 (throw)
     1279:  162-block  1
    $$$$$:  162-block  2
call    5 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba9WordRangeEE9constructIS2_JS2_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba9WordRangeEE9constructIS2_JS2_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba16KeywordExtractor4WordEE9constructIS3_JS3_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba16KeywordExtractor4WordEE9constructIS3_JS3_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
call    2 never executed
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JS6_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JS6_EEEvPT_DpOT0_ called 40967 returned 100% blocks executed 100%
    40967:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    40967:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    40967:  162-block  0
call    0 returned 40967
call    1 returned 40967
call    2 returned 40967
------------------
        -:  163:
        -:  164:      template<typename _Up>
        -:  165:	void
  842084*:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
  842084*:  168:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIydEE7destroyIS2_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorISt4pairIydEE7destroyIS2_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN8cppjieba16KeywordExtractor4WordEEEE7destroyISD_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN8cppjieba16KeywordExtractor4WordEEEE7destroyISD_EEvPT_ called 5738 returned 100% blocks executed 100%
     5738:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
     5738:  168:	{ __p->~_Up(); }
     5738:  168-block  0
call    0 returned 5738
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb1EEEE7destroyIS8_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb1EEEE7destroyIS8_EEvPT_ called 1279 returned 100% blocks executed 100%
     1279:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
     1279:  168:	{ __p->~_Up(); }
     1279:  168-block  0
call    0 returned 1279
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdELb1EEEE7destroyISB_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdELb1EEEE7destroyISB_EEvPT_ called 258826 returned 100% blocks executed 100%
   258826:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
   258826:  168:	{ __p->~_Up(); }
   258826:  168-block  0
call    0 returned 258826
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKjdELb0EEEE7destroyIS5_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKjdELb0EEEE7destroyIS5_EEvPT_ called 35224 returned 100% blocks executed 100%
    35224:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    35224:  168:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIjLb0EEEE7destroyIjEEvPT_:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIjLb0EEEE7destroyIjEEvPT_ called 15 returned 100% blocks executed 100%
       15:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
       15:  168:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKjPN8cppjieba8TrieNodeEELb0EEEE7destroyIS8_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKjPN8cppjieba8TrieNodeEELb0EEEE7destroyIS8_EEvPT_ called 497989 returned 100% blocks executed 100%
   497989:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
   497989:  168:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdEE7destroyIS8_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdEE7destroyIS8_EEvPT_ called 2046 returned 100% blocks executed 100%
     2046:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
     2046:  168:	{ __p->~_Up(); }
     2046:  168-block  0
call    0 returned 2046
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EE7destroyIS8_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EE7destroyIS8_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
    %%%%%:  168-block  0
call    0 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba4WordEE7destroyIS2_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba4WordEE7destroyIS2_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
    %%%%%:  168-block  0
call    0 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba16KeywordExtractor4WordEE7destroyIS3_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba16KeywordExtractor4WordEE7destroyIS3_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
    %%%%%:  168-block  0
call    0 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba9WordRangeEE7destroyIS2_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba9WordRangeEE7destroyIS2_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIN6limonp11LocalVectorIjEEE7destroyIS3_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorIN6limonp11LocalVectorIjEEE7destroyIS3_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
    %%%%%:  168-block  0
call    0 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN8cppjieba8DictUnitEE7destroyIS2_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorIN8cppjieba8DictUnitEE7destroyIS2_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
    %%%%%:  168-block  0
call    0 never executed
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_ called 40967 returned 100% blocks executed 100%
    40967:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    40967:  168:	{ __p->~_Up(); }
    40967:  168-block  0
call    0 returned 40967
------------------
        -:  169:#else
        -:  170:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  171:      // 402. wrong new expression in [some_] allocator::construct
        -:  172:      void
        -:  173:      construct(pointer __p, const _Tp& __val)
        -:  174:      { ::new((void *)__p) _Tp(__val); }
        -:  175:
        -:  176:      void
        -:  177:      destroy(pointer __p) { __p->~_Tp(); }
        -:  178:#endif
        -:  179:#endif // ! C++20
        -:  180:
        -:  181:      template<typename _Up>
        -:  182:	friend _GLIBCXX20_CONSTEXPR bool
        -:  183:	operator==(const new_allocator&, const new_allocator<_Up>&)
        -:  184:	_GLIBCXX_NOTHROW
        -:  185:	{ return true; }
        -:  186:
        -:  187:#if __cpp_impl_three_way_comparison < 201907L
        -:  188:      template<typename _Up>
        -:  189:	friend _GLIBCXX20_CONSTEXPR bool
        -:  190:	operator!=(const new_allocator&, const new_allocator<_Up>&)
        -:  191:	_GLIBCXX_NOTHROW
        -:  192:	{ return false; }
        -:  193:#endif
        -:  194:
        -:  195:    private:
        -:  196:      _GLIBCXX_CONSTEXPR size_type
 1417949*:  197:      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  198:      {
        -:  199:#if __PTRDIFF_MAX__ < __SIZE_MAX__
 1417949*:  200:	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  201:#else
        -:  202:	return std::size_t(-1) / sizeof(_Tp);
        -:  203:#endif
        -:  204:      }
        -:  205:    };
        -:  206:
        -:  207:_GLIBCXX_END_NAMESPACE_VERSION
        -:  208:} // namespace
        -:  209:
        -:  210:#endif
